name: auto-deploy
on:
    push:
        branches:
            - main
            - master
    workflow_dispatch:

jobs:
    version-check:
        name: Version Checking
        runs-on: [self-hosted]
        container:
            image: docker.kensa.fr/electron-build-image
            credentials:
                username: ${{ secrets.REGISTRY_USERNAME }}
                password: ${{ secrets.REGISTRY_PASSWORD }}
        outputs:
            version: ${{ steps.get-project-version.outputs.version }}
            tag: ${{ steps.get-tag.outputs.tag }}
            changes: ${{ steps.changes.outputs.changes }}
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Mark repo as safe
              run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

            - name: fetch
              run: |
                  git fetch --tags --force
                  git fetch --prune --unshallow

            - name: get-tag
              id: get-tag
              run: |
                  tag=$(git describe --tags --abbrev=0)
                  echo $tag
                  echo "tag=$tag" >> "$GITHUB_OUTPUT"

            - name: get-pkgversion
              id: get-project-version
              working-directory: launcher
              run: |
                  version=v$(cat package.json | jq -r ".version")
                  echo $version
                  echo "version=$version" >> "$GITHUB_OUTPUT"

            - name: get changes
              id: changes
              run: |
                  changes=$(git log "$(git describe --tags --abbrev=0)..HEAD" --pretty=format:'- %s (%ad)' --date=short)
                  echo "changes<<EOF" >> $GITHUB_OUTPUT
                  echo "$changes" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

    build:
        name: Build
        runs-on: [self-hosted]
        permissions: write-all
        needs: version-check
        if: ${{ needs.version-check.outputs.tag != needs.version-check.outputs.version || github.event_name == 'workflow_dispatch' }}
        container:
            image: docker.kensa.fr/electron-build-image
            credentials:
                username: ${{ secrets.REGISTRY_USERNAME }}
                password: ${{ secrets.REGISTRY_PASSWORD }}
        env:
            WINEPREFIX: /tmp/wineprefix
            WINEDLLOVERRIDES: vulkan,d3d11,d3d9=n
            XDG_RUNTIME_DIR: /tmp/xdg-runtime
            DISPLAY: ''
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Clear Previous wine setup
              run: |
                  pkill -f wine || true
                  pkill -f wineserver || true
                  rm -rf /tmp/wineprefix
                  rm -rf /tmp/xdg-runtime
                  mkdir -p /tmp/wineprefix
                  mkdir -p /tmp/xdg-runtime

            - name: enable corepack
              working-directory: launcher
              run: corepack enable

            - name: install dependencies
              working-directory: launcher
              run: yarn

            - name: build
              working-directory: launcher
              run: yarn release
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Overwrite GitHub release body with changelog and make release visible
              run: |
                  cat << EOF > changelog.txt
                  ${{ needs.version-check.outputs.changes }}
                  EOF
                  tag=${{ needs.version-check.outputs.version }}
                  gh release edit "$tag" --repo "$GITHUB_REPOSITORY" --notes-file changelog.txt --draft=false
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
