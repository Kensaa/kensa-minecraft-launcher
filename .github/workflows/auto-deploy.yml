name: auto-deploy
on:
    push:
        branches:
            - main
            - master
    workflow_dispatch:

jobs:
    version-check:
        name: Version Checking
        runs-on: [self-hosted]
        outputs:
            version: ${{ steps.get-project-version.outputs.version }}
            tag: ${{ steps.get-tag.outputs.tag }}
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: fetch
              run: |
                  git fetch --tags
                  git fetch --prune --unshallow

            - name: get-tag
              id: get-tag
              run: |
                  tag=$(git describe --tags --abbrev=0)
                  echo $tag
                  echo "tag=$tag" >> "$GITHUB_OUTPUT"

            - name: get-pkgversion
              id: get-project-version
              working-directory: launcher
              run: |
                  version=v$(cat launcher/package.json | jq -r ".version")
                  echo $version
                  echo "version=$version" >> "$GITHUB_OUTPUT"

    build:
        name: Build
        runs-on: [self-hosted]
        permissions: write-all
        needs: version-check
        if: ${{ needs.version-check.outputs.tag != needs.version-check.outputs.version || github.event_name == 'workflow_dispatch' }}
        container:
            image: docker.kensa.fr/electron-build-image
            credentials:
                username: ${{ secrets.REGISTRY_USERNAME }}
                password: ${{ secrets.REGISTRY_PASSWORD }}
        env:
            WINEPREFIX: /tmp/wineprefix
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: enable corepack
              working-directory: launcher
              run: corepack enable

            - name: install dependencies
              working-directory: launcher
              run: yarn

            - name: build
              working-directory: launcher
              run: yarn build

            # Removes the "v" in front of the version
            - name: version
              id: version
              run: echo "version=$(echo ${{needs.version-check.outputs.version}} | cut -b 2-)" >> "$GITHUB_OUTPUT"

            - name: get changes
              id: changes
              run: |
                  changes=$(git log "$(git describe --tags --abbrev=0)..HEAD" --pretty=format:"- %s (%ad)" --date=short)

            - name: release
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      launcher/release/Kensa Minecraft Launcher ${{steps.version.outputs.version}}.msi
                      launcher/release/Kensa Minecraft Launcher ${{steps.version.outputs.version}}.exe
                      launcher/release/kensa-minecraft-launcher-${{steps.version.outputs.version}}.zip
                  draft: false
                  prerelease: false
                  tag_name: ${{ needs.version-check.outputs.version }}
                  body: ${{ steps.changes.outputs.changes }}
